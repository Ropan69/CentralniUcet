// <auto-generated />
using System;
using CentralniUcet.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CentralniUcet.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210610111137_Start")]
    partial class Start
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CentralniUcet.Models.Autentifikace", b =>
                {
                    b.Property<int>("Veta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumAktualizace")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PlatnostDo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Uzivatel")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Veta");

                    b.HasIndex("Uzivatel")
                        .IsUnique();

                    b.ToTable("Autentifikace");
                });

            modelBuilder.Entity("CentralniUcet.Models.OverovaciMail", b =>
                {
                    b.Property<int>("Veta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumAktualizace")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<long>("IDOverovacihoMailu")
                        .HasColumnType("bigint");

                    b.Property<int>("IDUcetCentralni")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlatnostDo")
                        .HasColumnType("datetime2");

                    b.Property<int>("TypMailu")
                        .HasColumnType("int");

                    b.Property<string>("UzivatelAktualizace")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("Veta");

                    b.HasIndex("IDUcetCentralni");

                    b.ToTable("OverovaciMail");
                });

            modelBuilder.Entity("CentralniUcet.Models.UcetCentralni", b =>
                {
                    b.Property<int>("Veta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumAktualizace")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Heslo")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("IDUcetCentralni")
                        .HasColumnType("int");

                    b.Property<string>("Jmeno")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Mesto")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("NastaveniApl")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("Pohlavi")
                        .HasColumnType("int");

                    b.Property<string>("Prijmeni")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("SouhlasGDPR")
                        .HasColumnType("datetime2");

                    b.Property<string>("Stat")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<int>("StavUctu")
                        .HasColumnType("int");

                    b.Property<string>("UzivatelAktualizace")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("Vek")
                        .HasColumnType("int");

                    b.Property<int>("VychoziIDJidelny")
                        .HasColumnType("int");

                    b.Property<string>("VychoziIDUctuJidelny")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Veta");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IDUcetCentralni")
                        .IsUnique();

                    b.ToTable("UcetCentralni");
                });

            modelBuilder.Entity("CentralniUcet.Models.UcetJidelny", b =>
                {
                    b.Property<int>("Veta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumAktualizace")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDJidelny")
                        .HasColumnType("int");

                    b.Property<int>("IDUcetCentralni")
                        .HasColumnType("int");

                    b.Property<string>("IDUcetJidelny")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PopisUctuJidelny")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("UzivatelAktualizace")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("VynutitOvereniHesla")
                        .HasColumnType("bit");

                    b.HasKey("Veta");

                    b.HasIndex("IDUcetCentralni");

                    b.ToTable("UcetJidelny");
                });

            modelBuilder.Entity("CentralniUcet.Models.OverovaciMail", b =>
                {
                    b.HasOne("CentralniUcet.Models.UcetCentralni", "UcetCentralni")
                        .WithMany("OverovaciMailList")
                        .HasForeignKey("IDUcetCentralni")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UcetCentralni");
                });

            modelBuilder.Entity("CentralniUcet.Models.UcetJidelny", b =>
                {
                    b.HasOne("CentralniUcet.Models.UcetCentralni", "UcetCentralni")
                        .WithMany("UcetJidelnyList")
                        .HasForeignKey("IDUcetCentralni")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UcetCentralni");
                });

            modelBuilder.Entity("CentralniUcet.Models.UcetCentralni", b =>
                {
                    b.Navigation("OverovaciMailList");

                    b.Navigation("UcetJidelnyList");
                });
#pragma warning restore 612, 618
        }
    }
}
